---
- name: Deploy the Dockerized frontend and backend applications
  hosts: aws_servers
  become: yes

  vars:
    docker_registry: "docker.io"
    docker_username: "tasneemkhaled"
    frontend_image_name: "frontend"
    frontend_image_tag: "72"
    backend_image_name: "backend"
    backend_image_tag: "72"
    frontend_container_name: "my-frontend-container"
    backend_container_name: "my-backend-container"
    host_frontend_port: 3000
    container_frontend_port: 3000
    host_backend_port: 3001
    container_backend_port: 3001

  tasks:
    - name: Pull the frontend Docker image from Docker Hub if not present
      docker_image:
        name: "{{ docker_registry }}/{{ docker_username }}/{{ frontend_image_name }}:{{ frontend_image_tag }}"
        pull: yes
      register: frontend_image_result
      when: frontend_image_result.image is not defined

    - name: Check if the frontend container exists
      docker_container_info:
        name: "{{ frontend_container_name }}"
      register: frontend_container_info

    - name: Stop and remove the existing frontend container if it exists and is not in the desired state
      docker_container:
        name: "{{ frontend_container_name }}"
        state: absent
      when: frontend_container_info.containers | length > 0

    - name: Run the frontend Docker container if it doesn't exist or was removed
      docker_container:
        name: "{{ frontend_container_name }}"
        image: "{{ docker_registry }}/{{ docker_username }}/{{ frontend_image_name }}:{{ frontend_image_tag }}"
        ports:
          - "{{ host_frontend_port }}:{{ container_frontend_port }}"
        restart_policy: always
        state: started
      when: frontend_container_info.containers | length == 0

    - name: Pull the backend Docker image from Docker Hub if not present
      docker_image:
        name: "{{ docker_registry }}/{{ docker_username }}/{{ backend_image_name }}:{{ backend_image_tag }}"
        pull: yes
      register: backend_image_result
      when: backend_image_result.image is not defined

    - name: Check if the backend container exists
      docker_container_info:
        name: "{{ backend_container_name }}"
      register: backend_container_info
      ignore_errors: yes

    - name: Stop and remove the existing backend container if it exists and is not in the desired state
      docker_container:
        name: "{{ backend_container_name }}"
        state: absent
      when: backend_container_info.containers | length > 0

    - name: Run the backend Docker container if it doesn't exist or was removed
      docker_container:
        name: "{{ backend_container_name }}"
        image: "{{ docker_registry }}/{{ docker_username }}/{{ backend_image_name }}:{{ backend_image_tag }}"
        ports:
          - "{{ host_backend_port }}:{{ container_backend_port }}"
        restart_policy: always
        state: started
      when: backend_container_info.containers | length == 0
